#include<stdio.h>
#include<conio.h>
#include<stdlib.h>
struct node
{
int data;
struct node *left,*right;
};
struct node *create()
{
int x;
struct node *newnode;
newnode=(struct node*)malloc(sizeof(struct node));
printf("\nEnter value or (-1 for newnode)=");
scanf("%d",&x);
if(x==-1)
{
return 0;
}
else
{
newnode->data=x;
printf("Enter left child of %d\n",x);
newnode->left=create();
printf("Enter right child of %d\n",x);
newnode->right=create();
return newnode;
}
}
void preorder(struct node *root)
{
if(root==0)
{
return;
}
else
{
printf("%d\t",root->data);
preorder(root->left);
preorder(root->right);
}
}
void inorder(struct node *root)
{
if(root==0)
{
return;
}
else
{
inorder(root->left);
printf("%d\t",root->data);
inorder(root->right);
}
}
void postorder(struct node *root)
{
if(root==0)
{
return;
}
else
{
postorder(root->left);
postorder(root->right);
printf("%d\t",root->data);
}
}
struct node *root=0;
void main()
{
clrscr();
//struct node *root=0;
int ch;
do
{
printf("\n1 to create BST\n2 for preorder\n3 for inorder\n4 for postorder\n0 for exit=");
scanf("%d",&ch);
switch(ch)
{
case 1:
root=create();
break;
case 2:
printf("PREORDER IS=\n");
preorder(root);
printf("\n");
break;
case 3:
printf("INORDER IS=\n");
inorder(root);
printf("\n");
break;
case 4:
printf("POSTORDER IS=\n");
postorder(root);
printf("\n");
break;
case 0:
exit(0);
default:
printf("INVALID CHOICE");
}
}while(ch!=0);
getch();
}

