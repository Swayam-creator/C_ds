#include <stdio.h>
#include<conio.h>
#include <stdlib.h>
#include <string.h>
#define ALPHABET_SIZE (26)
#define CHAR_TO_INDEX(c) ((int)c - (int)'a')
#define N 8
struct word
{
char a[100];
}obj[100];
struct wordseach
{
char b[100];
}ob[100];
struct TrieNode
{
    struct TrieNode *children[ALPHABET_SIZE];
    int isEndOfWord;
};
struct TrieNode *getNode(void)
{
    struct TrieNode *pNode = NULL;

    pNode = (struct TrieNode *)malloc(sizeof(struct TrieNode));

    if (pNode)
    {
	int i;

	pNode->isEndOfWord =0;

	for (i = 0; i < ALPHABET_SIZE; i++)
	    pNode->children[i] = NULL;
    }

    return pNode;
}
void insert(struct TrieNode *root,struct word obj)
{
    int level;
    int length = strlen(obj.a);
    int index;

    struct TrieNode *pCrawl = root;

    for (level = 0; level < length; level++)
    {
	index = CHAR_TO_INDEX(obj.a[0]);
	if (!pCrawl->children[index])
	    pCrawl->children[index] = getNode();

	pCrawl = pCrawl->children[index];
    }
    pCrawl->isEndOfWord = 1;
}
int search(struct TrieNode *root,char a[100])
{
    int level;
    int length = strlen(a);
    int index;
    struct TrieNode *pCrawl = root;

    for (level = 0; level < length; level++)
    {
	index = CHAR_TO_INDEX(a[0]);

	if (!pCrawl->children[index])
	    return 0;

	pCrawl = pCrawl->children[index];
    }

    return (pCrawl->isEndOfWord);
}
void main()
{               clrscr();
int i;
printf("Enter any eieght words=");
for(i=1;i<=N;i++)
{
scanf("%s",obj[i].a);
}
    struct TrieNode *root = getNode();
    for (i =1; i <=N; i++)
	insert(root,obj[i]);
    int n;
    printf("Enter number of words to search=");
    scanf("%d",&n);
    printf("Enter that %d words=",n);
    for(i=1;i<=n;i++)
{
scanf("%s",ob[i].b);
}
    for(i=1;i<=n;i++)
    {
    printf("%s --- %d\n",ob[i].b, search(root,ob[i].b) );
    }
    getch();
}